basePath: /v1
definitions:
  models.APIError:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  models.APIMessage:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  models.Announcement:
    properties:
      category:
        type: string
      description:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/models.Coordinates'
      name:
        type: string
      userID:
        type: string
    type: object
  models.Coordinates:
    properties:
      lat:
        type: number
      long:
        type: number
    type: object
host: grupo6-egs-deti.ua.pt/announcements
info:
  contact: {}
  description: This is the API for the announcements service in GO with Gin Framework.
  title: Announcements service API
  version: "1.0"
paths:
  /:
    get:
      description: Get all announcements from the database or filter by location and
        radius
      parameters:
      - description: id of user who created the announcement
        in: query
        name: userID
        type: string
      - description: radius in meters
        in: query
        name: radius
        type: number
      - description: latitude
        in: query
        name: lat
        type: number
      - description: longitude
        in: query
        name: long
        type: number
      - description: name of the contractor
        in: query
        name: name
        type: string
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Announcement'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIError'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Get all announcements
      tags:
      - Announcements
    post:
      description: Create a new announcement in the database
      parameters:
      - description: announcement object
        in: body
        name: announcement
        required: true
        schema:
          $ref: '#/definitions/models.Announcement'
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Announcement'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Create a new announcement
      tags:
      - Announcements
  /{id}:
    delete:
      description: Delete announcement by ID from the database
      parameters:
      - description: announcement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.APIMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Delete announcement by ID
      tags:
      - Announcements
    get:
      description: Get announcement by ID from the database
      parameters:
      - description: announcement ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Announcement'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Get announcement by ID
      tags:
      - Announcements
    put:
      description: Update announcement by ID from the database
      parameters:
      - description: announcement ID
        in: path
        name: id
        required: true
        type: string
      - description: announcement object
        in: body
        name: announcement
        required: true
        schema:
          $ref: '#/definitions/models.Announcement'
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Announcement'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.APIError'
      summary: Update announcement by ID
      tags:
      - Announcements
  /healthz:
    get:
      description: Checks if the API is running.
      produces:
      - applcation/json
      responses:
        "200":
          description: OK
      summary: Health check
      tags:
      - Announcements
swagger: "2.0"
