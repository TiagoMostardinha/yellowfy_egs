# Create app deployment for auth service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: registry.deti/egs-yellowfy/auth:v8
          env:
            - name: DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: db-uri-secret
                  key: sqlalchemy_database_uri
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 5000

# Create db deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
        - name: auth-db
          image: mysql:latest
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root-password
                  key: password
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 3306
      volumes:
        - name: init-script
          configMap:
            name: mysql-init-script

# Create app deployment for announcements service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: announcements
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: announcements
  template:
    metadata:
      labels:
        app: announcements
    spec:
      containers:
        - name: announcements
          image: registry.deti/egs-yellowfy/announcements:v11
          resources:
            requests:
              memory: "32Mi"
              cpu: "10m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 9000

# Create mongodb deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          ports:
            - containerPort: 27017

#Create app service for booking service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: booking
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: booking
  template:
    metadata:
      labels:
        app: booking
    spec:
      containers:
      - name: booking
        image: registry.deti/egs-yellowfy/booking:v1
        env:
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: db-uri-secret-booking
              key: sqlalchemy_database_uri
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8000
# Create db deployment for booking service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root-password-booking
              key: password
        - name: MYSQL_USER
          value: admin
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root-password-booking
              key: password
        - name: MYSQL_DATABASE
          value: booking
        volumeMounts:
        - name: init-script-booking
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        ports:
        - containerPort: 3306
      volumes:
        - name: init-script-booking
          configMap:
            name: mysql-init-script-booking
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: egs-yellowfy
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
    
---
apiVersion: v1
kind: Secret
metadata:
  name: db-uri-secret-booking
  namespace: egs-yellowfy
type: Opaque
data:
  sqlalchemy_database_uri: bXlzcWwrcHlteXNxbDovL2FkbWluOmFkbWluQGFkbWluOjMzMDYvYm9va2luZw==

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-password-booking
  namespace: egs-yellowfy
type: Opaque
data:
  password: YWRtaW4=   # Base64 encoded value of 'admin'

# Create Service for booking
---
apiVersion: v1
kind: Service
metadata:
  name: booking
  namespace: egs-yellowfy
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: booking

# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: egs-yellowfy
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

# Create ConfigMap for booking
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script-booking
  namespace: egs-yellowfy
data:
  init.sql: |
    ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'admin';
    CREATE DATABASE IF NOT EXISTS booking;
    CREATE USER 'admin'@'localhost' IDENTIFIED BY 'admin';
    GRANT ALL PRIVILEGES ON booking.* TO 'admin'@'localhost';
    FLUSH PRIVILEGES;

# Create nginx deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: registry.deti/egs-yellowfy/nginx:v3
          name: nginx
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always

# Create Service for auth-db
---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  namespace: egs-yellowfy
spec:
  selector:
    app: auth-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306

# Create Secrets for auth-db
---
apiVersion: v1
kind: Secret
metadata:
  name: db-uri-secret
  namespace: egs-yellowfy
type: Opaque
data:
  sqlalchemy_database_uri: bXlzcWwrcHlteXNxbDovL3Jvb3Q6cm9vdEBhdXRoLWRiOjMzMDYvZmxhc2tfYXBwX2Ri

# Create Service for auth
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: egs-yellowfy
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: auth

# Create Secrets for auth
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-password
  namespace: egs-yellowfy
type: Opaque
data:
  password: cm9vdA== # Base64 encoded value of 'root'

# Create Service for mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: egs-yellowfy
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

# Create Service for announcements
---
apiVersion: v1
kind: Service
metadata:
  name: announcements
  namespace: egs-yellowfy
spec:
  ports:
    - port: 9000
      targetPort: 9000
  selector:
    app: announcements

# Create Service for nginx
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: egs-yellowfy
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: nginx

# Create ConfigMap for auth-db
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: egs-yellowfy
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS flask_app_db;

    ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'root';
    CREATE USER 'yellowfy'@'localhost' IDENTIFIED BY 'yellowfy';
    GRANT ALL PRIVILEGES ON flask_app_db.* TO 'yellowfy'@'localhost';
    FLUSH PRIVILEGES;


# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-k3s
  namespace: egs-yellowfy
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
    - host: grupo6-egs-deti.ua.pt
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx
                port:
                  number: 80
