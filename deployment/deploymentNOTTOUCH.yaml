# Create app deployment for auth service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
      - name: auth
        image: registry.deti/egs-yellowfy/auth:v1
        env:
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              name: db-uri-secret
              key: sqlalchemy_database_uri
        resources:
          requests:
            memory: "32Mi"
            cpu: "10m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000

#Create nginx deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy: {}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - image: registry.deti/egs-yellowfy/nginx:v1
          name: nginx
          ports:
            - containerPort: 80
          resources: {}
      restartPolicy: Always

# Create db deployment 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
  namespace: egs-yellowfy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-db
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
      - name: auth-db
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root-password
              key: password
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"   
            cpu: "250m"       
          limits:
            memory: "1Gi"     
            cpu: "500m"       
        ports:
        - containerPort: 3306
      volumes:
      - name: init-script
        configMap:
          name: mysql-init-script

---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  namespace: egs-yellowfy
spec:
  selector:
    app: auth-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
    
---
apiVersion: v1
kind: Secret
metadata:
  name: db-uri-secret
  namespace: egs-yellowfy
type: Opaque
data:
  sqlalchemy_database_uri: bXlzcWwrcHlteXNxbDovL3Jvb3Q6cm9vdEBhdXRoLWRiOjMzMDYvZmxhc2tfYXBwX2Ri

# Create Service for auth_app
---
apiVersion: v1
kind: Service
metadata:
  name: auth
  namespace: egs-yellowfy
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: auth

# Create Service for APP
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: egs-yellowfy
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-password
  namespace: egs-yellowfy
type: Opaque
data:
  password: cm9vdA==   # Base64 encoded value of 'root'

# Configure Traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-k3s
  namespace: egs-yellowfy
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: egs-yellowfy.deti
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx
            port: 
              number: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-init-script
  namespace: egs-yellowfy
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS flask_app_db;

    ALTER USER 'root'@'localhost' IDENTIFIED WITH caching_sha2_password BY 'root';
    CREATE USER 'yellowfy'@'localhost' IDENTIFIED BY 'yellowfy';
    GRANT ALL PRIVILEGES ON flask_app_db.* TO 'yellowfy'@'localhost';
    FLUSH PRIVILEGES;

